@page
@model IndexModel
@{
    ViewData["Title"] = "Events";
}

<!-- Hero Section -->
<div class="bg-gradient-to-r from-blue-600 to-indigo-600 py-20">
    <div class="max-w-3xl mx-auto text-center px-4">
        <h1 class="text-4xl md:text-5xl font-bold text-white mb-4">
            Discover and Join Amazing Events
        </h1>
        <p class="text-lg text-blue-100">
            Explore events around you, filter by category, and find your next experience.
        </p>
    </div>
</div>

<!-- Search and Filter Section -->
<div class="max-w-[85rem] mx-auto px-4 sm:px-6 lg:px-8 -mt-14 relative z-10">
    <div class="p-6 bg-white rounded-2xl shadow-xl">
        <form method="get" class="grid gap-4 lg:gap-6 md:grid-cols-3">
            <div>
                <label class="block text-sm text-gray-700 font-medium">Search</label>
                <input type="text" name="searchString" value="@Model.CurrentFilter"
                       class="py-2 px-3 block w-full border-gray-200 rounded-md text-sm focus:border-blue-500 focus:ring-blue-500"
                       placeholder="Search events...">
            </div>

            <div>
                <label class="block text-sm text-gray-700 font-medium">Category</label>
                <select name="category"
                        class="py-2 px-3 block w-full border-gray-200 rounded-md text-sm focus:border-blue-500 focus:ring-blue-500">
                    <option value="">All Categories</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category.Name" selected="@(Model.CurrentCategory == category.Name)">
                            @category.Name
                        </option>
                    }
                </select>
            </div>

            <div class="flex items-end">
                <button type="submit"
                        class="w-full py-2 px-3 inline-flex justify-center items-center gap-2 rounded-md border border-transparent font-semibold bg-indigo-600 text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-all text-sm">
                    🔍 Search
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Events Grid -->
<div class="max-w-[85rem] mx-auto px-4 sm:px-6 lg:px-8 py-14">
    <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-8">
        @foreach (var evt in Model.Events)
        {
            <div class="group flex flex-col h-full bg-white border border-gray-200 rounded-2xl shadow-md hover:shadow-lg transition-shadow overflow-hidden">
                <div class="h-52 flex flex-col justify-center items-center bg-gradient-to-br from-blue-500 to-indigo-500">
                    @if (!string.IsNullOrEmpty(evt.ThumbnailImage))
                    {
                        <img class="w-full h-full object-cover" src="@evt.ThumbnailImage" alt="@evt.Title">
                    }
                    else
                    {
                        <svg class="w-24 h-24 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                        </svg>
                    }
                </div>

                <div class="p-6 flex flex-col flex-grow">
                    <span class="block mb-2 text-xs font-semibold uppercase tracking-wide text-indigo-600">
                        🎟️ @evt.CategoryName
                    </span>
                    <h3 class="text-2xl font-bold text-gray-800">
                        @evt.Title
                    </h3>
                    <p class="mt-2 text-gray-600 flex-grow">
                        @(evt.Description?.Length > 100 ? evt.Description.Substring(0, 100) + "..." : evt.Description)
                    </p>

                    <div class="mt-4 space-y-1 text-sm text-gray-500">
                        <div class="flex items-center gap-2">
                            📍 <span>@evt.Location</span>
                        </div>
                        <div class="flex items-center gap-2">
                            📅 <span>@evt.EventDate.ToString("MMM dd, yyyy HH:mm")</span>
                        </div>
                        <div class="flex items-center gap-2">
                            👥 <span>@evt.CurrentAttendees / @evt.MaxAttendees attendees</span>
                        </div>
                    </div>
                </div>

                <div class="mt-auto">
                    <a href="/Events/Details?id=@evt.Id"
                       class="block w-full py-3 text-center bg-indigo-600 text-white font-semibold hover:bg-indigo-700 transition-all rounded-b-2xl">
                        View Details
                    </a>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    @{
        var prevDisabled = !Model.Events.HasPreviousPage ? "opacity-50 pointer-events-none" : "";
        var nextDisabled = !Model.Events.HasNextPage ? "opacity-50 pointer-events-none" : "";
    }
    <div class="mt-12 flex justify-center space-x-4">
        <a asp-page="./Index"
           asp-route-pageIndex="@(Model.Events.PageIndex - 1)"
           asp-route-searchString="@Model.CurrentFilter"
           asp-route-category="@Model.CurrentCategory"
           class="py-2 px-4 rounded-full border border-gray-300 bg-white text-gray-700 hover:bg-gray-100 transition-all text-sm font-medium @prevDisabled">
            ⬅️ Previous
        </a>
        <a asp-page="./Index"
           asp-route-pageIndex="@(Model.Events.PageIndex + 1)"
           asp-route-searchString="@Model.CurrentFilter"
           asp-route-category="@Model.CurrentCategory"
           class="py-2 px-4 rounded-full border border-gray-300 bg-white text-gray-700 hover:bg-gray-100 transition-all text-sm font-medium @nextDisabled">
            Next ➡️
        </a>
    </div>
</div>
