@page
@model DetailsModel
@{
    ViewData["Title"] = Model.Event.Title;
}

<div class="max-w-[85rem] mx-auto px-4 sm:px-6 lg:px-8 py-10">
    @if (TempData["Success"] != null)
    {
        <div id="success-alert" class="mb-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative">
            <span class="block sm:inline">@TempData["Success"]</span>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div id="error-alert" class="mb-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative">
            <span class="block sm:inline">@TempData["Error"]</span>
        </div>
    }

    <div class="bg-white border rounded-xl shadow-sm">
        <div class="p-4 sm:p-7">
            <div class="grid gap-6 md:grid-cols-2">
                <!-- Event Images -->
                <div>
                    @if (!string.IsNullOrEmpty(Model.Event.ThumbnailImage))
                    {
                        <img src="@Model.Event.ThumbnailImage" alt="@Model.Event.Title" class="w-full h-64 object-cover rounded-xl">
                    }
                    @if (Model.Event.Images != null && Model.Event.Images.Any())
                    {
                        <div class="grid grid-cols-3 gap-2 mt-2">
                            @foreach (var image in Model.Event.Images)
                            {
                                <img src="@image.ImageUrl" alt="@image.Caption" class="w-full h-24 object-cover rounded-lg">
                            }
                        </div>
                    }
                </div>

                <!-- Event Details -->
                <div>
                    <h1 class="text-3xl font-bold text-gray-800 mb-4">@Model.Event.Title</h1>
                    <div class="space-y-4">
                        <p class="text-gray-600">@Model.Event.Description</p>

                        <div class="flex items-center gap-2 text-gray-600">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                            </svg>
                            <span>@Model.Event.Location</span>
                        </div>

                        <div class="flex items-center gap-2 text-gray-600">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                            </svg>
                            <span>@Model.Event.EventDate.ToString("MMMM dd, yyyy HH:mm")</span>
                        </div>

                        <div class="flex items-center gap-2 text-gray-600">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                            </svg>
                            <span>@Model.Event.CurrentAttendees / @Model.Event.MaxAttendees Attendees</span>
                        </div>

                        <div class="flex items-center gap-2 text-gray-600">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
                            </svg>
                            <span>@Model.Event.Category?.Name</span>
                        </div>

                        @if (User.Identity.IsAuthenticated)
                        {
                            @if (!Model.IsAttending)
                            {
                                <form method="post" asp-page-handler="Attend" asp-route-id="@Model.Event.Id">
                                    <button type="submit"
                                            class="@(Model.IsFull ? "bg-gray-500 cursor-not-allowed" : "bg-blue-500 hover:bg-blue-600") py-3 px-4 inline-flex justify-center items-center gap-2 rounded-md border border-transparent font-semibold text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all text-sm"
                                            disabled="@Model.IsFull">
                                        @(Model.IsFull ? "Event Full" : "Register for Event")
                                    </button>
                                </form>
                            }
                            else
                            {
                                <form method="post" asp-page-handler="Cancel" asp-route-id="@Model.Event.Id">
                                    <button type="submit"
                                            class="py-3 px-4 inline-flex justify-center items-center gap-2 rounded-md border border-transparent font-semibold bg-red-500 text-white hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition-all text-sm">
                                        Cancel Registration
                                    </button>
                                </form>
                            }
                        }
                        else
                        {
                            <a href="/Identity/Account/Login"
                               class="py-3 px-4 inline-flex justify-center items-center gap-2 rounded-md border border-transparent font-semibold bg-blue-500 text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all text-sm">
                                Login to Register
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-hide alerts after 5 seconds
        setTimeout(function() {
            var successAlert = document.getElementById('success-alert');
            var errorAlert = document.getElementById('error-alert');
            if (successAlert) successAlert.style.display = 'none';
            if (errorAlert) errorAlert.style.display = 'none';
        }, 5000);
    </script>
}